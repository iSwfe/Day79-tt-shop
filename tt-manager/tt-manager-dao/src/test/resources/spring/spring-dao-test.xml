<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd
            ">

	<!--1 加载数据库配置文件-->
	<context:property-placeholder location="classpath:db-test.properties"/>
	<!--2 添加数据源-->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close" >
		<!--数据库连接池的主属性-->
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!--调优属性-->
		<!--关闭默认的自动提交事务的机制-->
		<property name="defaultAutoCommit" value="false" />
	</bean>
	<!--3 创建MyBatis的会话工厂-->
	<!--mybatis-spring包的主要用途-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config-test.xml" />
		<property name="mapperLocations" value="classpath*:com/iswfe/ttshop/dao/*Mapper.xml" />
	</bean>
	<!--4 配置扫描DAO层接口,使*Mapper.xml对*Mapper.java的映射作用生效-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--注入会话工厂-->
		<!--这里要使用value而非ref-->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!--DAO层所在的包-->
		<property name="basePackage" value="com.iswfe.ttshop.dao" />
	</bean>
	<!--5 扫描DAO层下的注解类-->
	<context:component-scan base-package="com.iswfe.ttshop.dao" />

</beans>